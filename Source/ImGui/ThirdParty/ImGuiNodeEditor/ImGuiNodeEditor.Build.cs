// Copyright Kite & Lightning

using System.IO;
using UnrealBuildTool;

public class ImGuiNodeEditor : ModuleRules
{
    UnrealTargetConfiguration TargetConfiguration;

    private string SdkDir
    {
        get { return Path.GetFullPath(ModuleDirectory); }
    }

    private string LibraryBaseDir
    {
        get { return Path.GetFullPath(Path.Combine(SdkDir, "Lib")); }
    }

    private string IncludeDir
    {
        get { return Path.Combine(SdkDir, "Include"); }
    }

    private string LibraryName()
    {
        string configSuffix;
        switch (TargetConfiguration)
        {
            case UnrealTargetConfiguration.Debug:
            case UnrealTargetConfiguration.DebugGame:
                configSuffix = "_d.lib";
                break;
            case UnrealTargetConfiguration.Development:
            case UnrealTargetConfiguration.Test:
            case UnrealTargetConfiguration.Shipping:
            default:
                configSuffix = ".lib";
                break;
        }
        return "imgui_node_editor" + configSuffix;
    }

    public ImGuiNodeEditor(ReadOnlyTargetRules Target) : base(Target)
	{
        // This build file is only here so UE4's autogenerated .sln will include it
        // We don't actually link to this library or reference it
        TargetConfiguration = Target.Configuration;
        Type                = ModuleType.External;

        // if (Target.Platform == UnrealTargetPlatform.Win64)
		// {
        //     PublicSystemIncludePaths.Add(IncludeDir);
        //     PublicLibraryPaths.Add(LibraryBaseDir);
        //     PublicAdditionalLibraries.Add(LibraryName());
		// }
	}
}
